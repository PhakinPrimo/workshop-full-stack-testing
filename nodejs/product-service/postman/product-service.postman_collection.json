{
	"info": {
		"_postman_id": "e2012524-11ae-4af1-a04d-a7438ebe16eb",
		"name": "product-service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1453931",
		"_collection_link": "https://red-firefly-245852.postman.co/workspace/fullstack-testing~2ebd74af-a9d3-4976-9aeb-47141276dc91/collection/1453931-e2012524-11ae-4af1-a04d-a7438ebe16eb?action=share&source=collection_link&creator=1453931"
	},
	"item": [
		{
			"name": "Succces with get all product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Schema is valid\", function () {",
							"  var schema = {",
							"    type: \"array\",",
							"    items: {",
							"      type: \"object\",",
							"      properties: {",
							"        id: { type: \"number\" },",
							"        name: { type: \"string\" },",
							"        description: { type: \"string\" },",
							"        price: { type: \"number\" }",
							"      },",
							"      required: [\"id\", \"name\", \"description\", \"price\"]",
							"    }",
							"  };",
							"",
							"  var response = pm.response.json();",
							"  pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});",
							"",
							"// Add a test to check the size of the response",
							"pm.test(\"Response size is equal to 3\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.length).to.equal(3, \"Response size should be equal to 3\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-access-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzE1NjEzOTAwLCJleHAiOjE3MTU3MDAzMDB9.p7OdirwZniwpFmNYy2F8xOQyjW3D50QxEDiblIUg6Dk"
					}
				],
				"url": {
					"raw": "localhost:3002/api/products",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail with get all product + no token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							"pm.test(\"Check message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(\"No token provided!\").to.eql(jsonData.message);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3002/api/products",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail with get all product + Unauthorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Check message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(\"Unauthorized\").to.eql(jsonData.message);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-access-token",
						"value": "vvvvv"
					}
				],
				"url": {
					"raw": "localhost:3002/api/products",
					"host": [
						"localhost"
					],
					"port": "3002",
					"path": [
						"api",
						"products"
					]
				}
			},
			"response": []
		}
	]
}